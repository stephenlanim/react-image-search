{"version":3,"sources":["api/unsplash.js","components/SearchBar.js","components/ImageCard.js","components/ImageList.js","components/App.js","index.js"],"names":["axios","create","baseURL","headers","Authorization","SearchBar","state","term","onFormSubmit","e","preventDefault","props","onSubmit","className","this","htmlFor","type","name","placeholder","value","onChange","setState","target","React","Component","ImageCard","spans","setSpans","height","imageRef","current","clientHeight","Math","ceil","createRef","addEventListener","image","alt_description","urls","style","gridRowEnd","alt","src","regular","ref","ImageList","returnedImages","images","map","key","id","App","onSearchSubmit","a","unsplash","get","params","query","response","data","results","marginTop","ReactDOM","render","document","querySelector"],"mappings":"yQAGeA,E,OAAAA,EAAMC,OAAO,CAC3BC,QAAS,2BACTC,QAAS,CAERC,cAAe,gFCoCFC,E,2MAvCdC,MAAQ,CAACC,KAAM,I,EAQfC,aAAe,SAACC,GACfA,EAAEC,iBAGF,EAAKC,MAAMC,SAAS,EAAKN,MAAMC,O,wEAGvB,IAAD,OAEP,OACC,yBAAKM,UAAU,cACd,0BAAMA,UAAU,UAAUD,SAAUE,KAAKN,cACxC,yBAAKK,UAAU,SACd,2BAAOE,QAAQ,UAAf,gBACA,2BACCC,KAAK,OACLC,KAAK,SACLC,YAAY,gCACZC,MAAOL,KAAKR,MAAMC,KAClBa,SAAU,SAACX,GAAD,OAAO,EAAKY,SAAS,CAAEd,KAAME,EAAEa,OAAOH,kB,GA7B/BI,IAAMC,WC2CfC,G,kBAxCd,WAAYd,GAAO,IAAD,8BACjB,4CAAMA,KAKPL,MAAQ,CACPoB,MAAO,GAPU,EAUlBC,SAAW,WAEV,IAAMC,EAAS,EAAKC,SAASC,QAAQC,aAC/BL,EAAQM,KAAKC,KAAKL,EAAS,IACjC,EAAKP,SAAU,CAACK,MAAOA,KAXvB,EAAKG,SAAWN,IAAMW,YAHL,E,iFAkBjBpB,KAAKe,SAASC,QAAQK,iBAAiB,OAAQrB,KAAKa,Y,+BAO7C,MAEyBb,KAAKH,MAAMyB,MAApCC,EAFA,EAEAA,gBAAiBC,EAFjB,EAEiBA,KAExB,OACC,yBAAKC,MAAO,CAACC,WAAW,QAAD,OAAU1B,KAAKR,MAAMoB,SAC3C,yBACCe,IAAKJ,EACLK,IAAKJ,EAAKK,QACVC,IAAK9B,KAAKe,gB,GApCSN,IAAMC,YCyBfqB,EAxBG,SAAClC,GAIlB,IAAMmC,EAAiBnC,EAAMoC,OAAOC,IACnC,SAACZ,GAID,OACC,kBAAC,EAAD,CAGCa,IAAKb,EAAMc,GACXd,MAAOA,MAKV,OACC,yBAAKvB,UAAU,cAAciC,ICchBK,E,2MAhCd7C,MAAQ,CACPyC,OAAQ,I,EAKRK,e,sCAAiB,WAAO7C,GAAP,eAAA8C,EAAA,qEAEMC,EAASC,IAAI,iBAAkB,CAErDC,OAAQ,CACPC,MAAOlD,KALQ,OAEXmD,EAFW,OAWjB,EAAKrC,SAAS,CAAE0B,OAAQW,EAASC,KAAKC,UAXrB,yC,8HAgBjB,OACC,yBAAK/C,UAAU,eAAe0B,MAAO,CAACsB,UAAW,SAChD,kBAAC,EAAD,CAAWjD,SAAUE,KAAKsC,iBAC1B,kBAAC,EAAD,CAAWL,OAAQjC,KAAKR,MAAMyC,c,GA1BhBxB,IAAMC,WCDxBsC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,cAAc,Y","file":"static/js/main.03cf7cb5.chunk.js","sourcesContent":["import axios from 'axios';\n\n// Create instance of axios with desired properties for Unsplash request\nexport default axios.create({\n\tbaseURL: 'https://api.unsplash.com',\n\theaders: {\n\t\t// my access key for the Unsplash API\n\t\tAuthorization: \"Client-ID b921779d8c60f79e654acbddcca7956874e0c36ac6e2ab7425dcea2180b035ed\"\n\t}\n});\n","import React from 'react';\n\nclass SearchBar extends React.Component {\n\n\tstate = {term: ''};\n\t\n\t// onInputChange(e) {\n\t// \tconsole.log(e.target.value);\n\t// }\n\n\t// Method for handling user form submission\n\t\t// Used arrow function to bind 'this.'\n\tonFormSubmit = (e) => {\n\t\te.preventDefault();\n\t\t\n\t\t// Call onSubmit callback function passed down from App component\n\t\tthis.props.onSubmit(this.state.term);\n\t};\n\n\trender(){\n\n\t\treturn (\n\t\t\t<div className=\"ui segment\">\n\t\t\t\t<form className=\"ui form\" onSubmit={this.onFormSubmit}>\n\t\t\t\t\t<div className=\"field\">\n\t\t\t\t\t\t<label htmlFor=\"search\">Image Search</label>\n\t\t\t\t\t\t<input \n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\tname=\"search\"\n\t\t\t\t\t\t\tplaceholder=\"Enter your image search term.\"\n\t\t\t\t\t\t\tvalue={this.state.term}\n\t\t\t\t\t\t\tonChange={(e) => this.setState({ term: e.target.value })}\n\t\t\t\t\t\t\t\n\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t</form>\n\t\t\t\t\n\t\t\t</div>\n\t\t);\n\t}\n} // end of SearchBar class\n\nexport default SearchBar;","import React from 'react';\n// import ImageList from './ImageList';\n\nclass ImageCard extends React.Component {\n\n\tconstructor(props){\n\t\tsuper(props);\n\t\t// React DOM Reference to be used for images\n\t\tthis.imageRef = React.createRef();\n\t}\n\n\tstate = {\n\t\tspans: 0\n\t};\n\n\tsetSpans = ()=> {\n\t\t// console.log(this.imageRef.current.clientHeight);\n\t\tconst height = this.imageRef.current.clientHeight;\n\t\tconst spans = Math.ceil(height / 10);\n\t\tthis.setState( {spans: spans} );\n\t}\n\t\n\tcomponentDidMount(){\n\t\tthis.imageRef.current.addEventListener('load', this.setSpans);\n\t\t// console.log(this.imageRef.current);\n\t\t// console.log(this.imageRef.current.clientHeight);\n\t\t// this.setState()\n\t}\n\n\n\trender(){\n\t\t// used destructuring to get properties from each image object mapped in the ImageList component\n\t\tconst {alt_description, urls} = this.props.image;\n\n\t\treturn (\n\t\t\t<div style={{gridRowEnd: `span ${this.state.spans}`}}>\n\t\t\t\t<img\n\t\t\t\t\talt={alt_description} \n\t\t\t\t\tsrc={urls.regular}\n\t\t\t\t\tref={this.imageRef}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t);\n\t}\n}\nexport default ImageCard;","import './ImageList.css';\nimport React from 'react';\nimport ImageCard from './ImageCard';\n\nconst ImageList = (props) => {\n\t// console.log(props.images);\n\n\t// Map over images\n\tconst returnedImages = props.images.map( \n\t\t(image) => {\n\t\t// ({alt_description, urls, id}) => {\n\t\t// \t// used destructuring to get properties from each mapped image object\n\t\t\n\t\treturn (\n\t\t\t<ImageCard\n\t\t\t\t// alt={alt_description}\n\t\t\t\t// src={urls.regular}\n\t\t\t\tkey={image.id}\n\t\t\t\timage={image}\n\t\t\t/>\n\t\t); // end of return statement\n\t}); // end of returnedImages\n\n\treturn (\n\t\t<div className=\"image-list\">{returnedImages}</div>\n\t);\n};\n\nexport default ImageList;","import React from 'react';\nimport unsplash from '../api/unsplash';\nimport SearchBar from './SearchBar';\nimport ImageList from './ImageList';\n\nclass App extends React.Component {\n\tstate = {\n\t\timages: []\n\t};\n\n\t// Method for fetching images based on the search term\n\t\t// Used arrow function to bind 'this.'\n\t onSearchSubmit = async (term) => {\n\t\t// Use Axios to get photos from the Unsplash API\n\t\tconst response = await unsplash.get('/search/photos', {\n\n\t\t\tparams: {\n\t\t\t\tquery: term // enters the user's search term as the query parameter for the request\n\t\t\t}\n\t\t\t\n\t\t});\n\n\t\t// Assign fetched images to state.images\n\t\tthis.setState({ images: response.data.results});\n\t\t\n\t} // end of onSearchSubmit()\n\t\n\trender(){\n\t\treturn (\n\t\t\t<div className=\"ui container\" style={{marginTop: '10px'}}>\n\t\t\t\t<SearchBar onSubmit={this.onSearchSubmit} />\n\t\t\t\t<ImageList images={this.state.images} />\n\t\t\t</div>\n\t\t\t\n\t\t); // end fo return statement\n\t}\n}; // end of App class\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nReactDOM.render(<App />, document.querySelector('#root'));"],"sourceRoot":""}